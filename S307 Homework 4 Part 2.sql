DROP TABLE ORDER_DETAILS CASCADE CONSTRAINTS;
DROP TABLE ORDERS CASCADE CONSTRAINTS;
DROP TABLE PRODUCTS CASCADE CONSTRAINTS;
DROP TABLE CUSTOMERS CASCADE CONSTRAINTS;

CREATE TABLE PRODUCTS
(
ID                  NUMBER(10) PRIMARY KEY,
PRODUCT_NAME        VARCHAR2(30) NOT NULL,
PRODUCT_DESCRIPTION VARCHAR2(50),
UNIT_PRICE          NUMBER(5,2)
);

CREATE TABLE CUSTOMERS
(
ID            NUMBER(10) PRIMARY KEY,
FIRST_NAME    VARCHAR2(10) NOT NULL,
LAST_NAME     VARCHAR2(30) NOT NULL,
ADDRESS1      VARCHAR2(30) NOT NULL,
ADDRESS2      VARCHAR2(30),
CITY          VARCHAR2(30) NOT NULL,
STATE         VARCHAR2(30) NOT NULL,
ZIP           VARCHAR2(30) NOT NULL,
PHONE         VARCHAR2(30)
);

CREATE TABLE ORDERS
(
ORDER_NUMBER NUMBER(10) PRIMARY KEY,
ORDER_DATE   DATE NOT NULL,
CUSTOMER_ID  NUMBER(10) NOT NULL,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
);

CREATE TABLE ORDER_DETAILS
(
ID    NUMBER(10) PRIMARY KEY,
PRICE NUMBER(5,2) NOT NULL,
QTY   NUMBER(5) NOT NULL,
ORDER_ID  NUMBER(10) NOT NULL,
PRODUCT_ID  NUMBER(1) NOT NULL,
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_NUMBER),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

INSERT INTO PRODUCTS VALUES (1,'Freschetta Pizza','Frozen Pizza',4.99);
INSERT INTO PRODUCTS VALUES (2,'Campbell Tomato Soup','Canned Soup',2.99);
INSERT INTO PRODUCTS VALUES (3,'Freschetta Pizza','Frozen Pizza',4.99);
INSERT INTO PRODUCTS VALUES (4,'Amys Kitchen Vegetarian Chilli','Chilli',5);

INSERT INTO CUSTOMERS VALUES (10045,'Bob','Doe','East Tenth Street','Apt X 29','Bloomington','IN','47403','123-456-7890');
INSERT INTO CUSTOMERS VALUES (10046,'Alice','Doe','125th Street','Apt 1789','New York','NY','10282','');
INSERT INTO CUSTOMERS VALUES (10047,'Jane','Doe','128th Street','Apt 1759','New York','NY','10283','');
INSERT INTO customers VALUES (10048,'Nisha','Subramani','College Avenue','Apt 177','Bloomington','IN','47408','');

INSERT INTO ORDERS VALUES (100001,TO_DATE('2009-11-12','YYYY-MM-DD'),10045);
INSERT INTO ORDERS VALUES (100002,TO_DATE('2009-11-12','YYYY-MM-DD'),10046);
INSERT INTO ORDERS VALUES (100003,TO_DATE('2009-11-13','YYYY-MM-DD'),10046);
INSERT INTO ORDERS VALUES (100004,TO_DATE('2009-11-14','YYYY-MM-DD'),10047);
INSERT INTO ORDERS VALUES (100005,TO_DATE('2009-11-17','YYYY-MM-DD'),10048);

INSERT INTO ORDER_DETAILS VALUES (1,28,14,100001,2);
INSERT INTO ORDER_DETAILS VALUES (2,4.99,1,100001,1);
INSERT INTO ORDER_DETAILS VALUES (3,9.90,2,100002,1);
INSERT INTO ORDER_DETAILS VALUES (4,15,3,100005,4);
INSERT INTO ORDER_DETAILS VALUES (5,60,12,100002,4);
INSERT INTO ORDER_DETAILS VALUES (6,24,6,100002,3);
INSERT INTO ORDER_DETAILS VALUES (7,24,6,100003,3);
INSERT INTO ORDER_DETAILS VALUES (8,24,6,100005,3);

COMMIT;

CREATE VIEW CUSTOMER_DETAILS_REPORT AS
SELECT SUM(ORDER_DETAILS.QTY*ORDER_DETAILS.PRICE), ORDERS.ORDER_NUMBER, CUSTOMERS.ID, CUSTOMERS.FIRST_NAME, CUSTOMERS.LAST_NAME, CUSTOMERS.ADDRESS1, CUSTOMERS.ADDRESS2, CUSTOMERS.CITY, CUSTOMERS.STATE, CUSTOMERS.ZIP, CUSTOMERS.PHONE, ORDER_ID FROM CUSTOMERS, ORDER_DETAILS, ORDERS
WHERE ORDER_DETAILS.ORDER_ID=ORDERS.ORDER_NUMBER AND ORDERS.CUSTOMER_ID=CUSTOMERS.ID HAVING SUM(ORDER_DETAILS.QTY*ORDER_DETAILS.PRICE) > AVG(SUM(ORDER_DETAILS.PRICE));

UPDATE CUSTOMERS SET CUSTOMERS.LAST_NAME = 'Subramanian' WHERE CUSTOMERS.ID = 10048;

SELECT PRODUCTS.PRODUCT_NAME, PRODUCTS.UNIT_PRICE FROM PRODUCTS WHERE PRODUCTS.UNIT_PRICE = (SELECT(MAX(PRODUCTS.UNIT_PRICE)) FROM PRODUCTS);

SELECT SUM(ORDER_DETAILS.QTY),ORDER_DETAILS.ORDER_ID FROM ORDER_DETAILS HAVING SUM(ORDER_DETAILS.QTY) =  MIN(SUM(ORDER_DETAILS.QTY)) ORDER BY MIN(SUM(ORDER_DETAILS.QTY));

SELECT (ORDER_DETAILS.QTY*ORDER_DETAILS.PRICE), CUSTOMERS.ID, CUSTOMERS.FIRST_NAME, CUSTOMERS.LAST_NAME, CUSTOMERS.ADDRESS1, CUSTOMERS.ADDRESS2, CUSTOMERS.CITY, CUSTOMERS.STATE, CUSTOMERS.ZIP, CUSTOMERS.PHONE, ORDER_DETAILS.ID FROM ORDER_DETAILS,CUSTOMERS WHERE ORDER_DETAILS.ID = CUSTOMERS.ID ORDER BY (ORDER_DETAILS.QTY*ORDER_DETAILS.PRICE);